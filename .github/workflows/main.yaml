name: main

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install apt dependencies
        run: |
          sudo apt-get update -y --allow-releaseinfo-change
          sudo apt-get install --no-install-recommends -y \
            libegl1-mesa \
            libopengl0 \
            libgl1 \
            libgl1-mesa-glx
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: environment.yml
          auto-update-conda: false
          python-version: "3.9"
      - name: "Install Test Framework"
        run: pip install pytest
      - name: "Install Codem"
        run: pip install .
      - name: "Debug Info"
        run: |
          echo python location: `which python`
          echo python version: `python --version`
          echo pytest location: `which pytest`
          echo installed packages
          conda list
          pip list
      - name: "Run Tests"
        run: pytest tests -v
  lint:
    name: lint-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: "3.12"
      - name: Install Linting Tools
        run: |
          python -m pip install mypy numpy types-PyYAML typing-extensions
      - name: Run mypy
        run: mypy src
  analyze:
    name: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: environment.yml
          auto-update-conda: false
          python-version: "3.12"
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "python"
          # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          queries: +security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
